name: discovery-app
services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:8080" # expose to make /oauth endpoint work
    volumes:
      - ./nginx_conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - webapp
    networks:
      - net0

  api:
    build:
      context: .
      dockerfile: Dockerfile_api
    environment:
      - ES_HOST=http://es:9200
    depends_on:
      - es
    ports:
      - "8000:8000"
    restart: on-failure
    networks:
      - net0

  es:
    image: elasticsearch:8.17.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=/https?:\/\/localhost(:[0-9]+)?/
    ports:
      - "9200:9200"
    networks:
      - net0

# To run in development mode:
# WEB_APP_MODE=development docker compose -f docker-compose.yml -f docker-compose.override.yml up --detach

# To run in production mode:
# WEB_APP_MODE=production docker compose up --detach

  webapp:
    build:
      dockerfile: Dockerfile_webapp.${WEB_APP_MODE:-production} # Defaults to Dockerfile.prod if WEB_APP_MODE is not set
    environment:
      - NODE_ENV=${WEB_APP_MODE:-production}
    ports:
      - "3000"    # fully functional webapp accessed on nginx port, (optional) 3000:3000 port is for frontend ONLY with no API access
      - "24679:24679"    # expose HMR port for development
    restart: on-failure
    networks:
      - net0

networks:
  net0:
    driver: bridge
